version: "2.1"
services:
  pg:
    image: postgres:12.2
    env_file:
      - .env
    expose:
      - 5432
    volumes:
      - pg_data:/var/lib/postgresql/data
      - ./database/test-pg-data.sql:/docker-entrypoint-initdb.d/test-pg-data.sql
    healthcheck:
      test: ["CMD", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
  mongo:
    build:
      context: .
      dockerfile: Dockerfile.mongo
    volumes_from:
      - data
    volumes:
      - node_modules:/app/node_modules
    expose:
      - 27017
    depends_on:
      - data
  node:
    build: .
    env_file:
      - .env
    expose:
      - 3000
    links:
      - pg
      - mongo
    depends_on:
      - pg
      - mongo
      - data
    volumes:
      - node_modules:/app/node_modules
    volumes_from:
      - data
    restart: on-failure
  nginx:
    image: nginx:latest
    links:
      - node
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/server.crt:/etc/nginx/ssl/server.crt
      - ./nginx/server.key:/etc/nginx/ssl/server.key
    ports:
      - 80:80
      - 443:443
    depends_on:
      - node
    restart: always
  data:
    image: alpine:latest
    volumes:
      - ./:/app

volumes:
  node_modules:
  pg_data:
  mongo_data:
